/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ShowcaseRouteImport } from './routes/_showcase'
import { Route as HooksRouteImport } from './routes/_hooks'
import { Route as ShowcaseIndexRouteImport } from './routes/_showcase/index'
import { Route as HooksWagmiRouteImport } from './routes/_hooks/wagmi'
import { Route as HooksProviderRouteImport } from './routes/_hooks/provider'
import { Route as ShowcaseShowcaseAuthRouteImport } from './routes/_showcase/showcase/auth'
import { Route as HooksWalletUseWalletsRouteImport } from './routes/_hooks/wallet/useWallets'
import { Route as HooksWalletUseWalletRouteImport } from './routes/_hooks/wallet/useWallet'
import { Route as HooksWagmiUseSwitchChainRouteImport } from './routes/_hooks/wagmi/useSwitchChain'
import { Route as HooksWagmiUseDisconnectRouteImport } from './routes/_hooks/wagmi/useDisconnect'
import { Route as HooksWagmiUseBalanceRouteImport } from './routes/_hooks/wagmi/useBalance'
import { Route as HooksWagmiUseAccountRouteImport } from './routes/_hooks/wagmi/useAccount'
import { Route as HooksUtilsUseUIRouteImport } from './routes/_hooks/utils/useUI'
import { Route as HooksUtilsUseStatusRouteImport } from './routes/_hooks/utils/useStatus'
import { Route as HooksAuthUseWalletAuthRouteImport } from './routes/_hooks/auth/useWalletAuth'
import { Route as HooksAuthUseUserRouteImport } from './routes/_hooks/auth/useUser'
import { Route as HooksAuthUseSignOutRouteImport } from './routes/_hooks/auth/useSignOut'
import { Route as HooksAuthUseOauthRouteImport } from './routes/_hooks/auth/useOauth'
import { Route as HooksAuthUseGuestAuthRouteImport } from './routes/_hooks/auth/useGuestAuth'
import { Route as HooksAuthUseEmailAuthRouteImport } from './routes/_hooks/auth/useEmailAuth'
import { Route as HooksAuthUseAuthCallbackRouteImport } from './routes/_hooks/auth/useAuthCallback'
import { Route as ShowcaseShowcaseAuthIndexRouteImport } from './routes/_showcase/showcase/auth/index'
import { Route as ShowcaseShowcaseAuthSignupRouteImport } from './routes/_showcase/showcase/auth/signup'
import { Route as ShowcaseShowcaseAuthPasswordCallbackRouteImport } from './routes/_showcase/showcase/auth/password-callback'
import { Route as ShowcaseShowcaseAuthLoginRouteImport } from './routes/_showcase/showcase/auth/login'
import { Route as ShowcaseShowcaseAuthForgotPasswordRouteImport } from './routes/_showcase/showcase/auth/forgot-password'
import { Route as ShowcaseShowcaseAuthConnectWalletRouteImport } from './routes/_showcase/showcase/auth/connect-wallet'
import { Route as ShowcaseShowcaseAuthCallbackRouteImport } from './routes/_showcase/showcase/auth/callback'

const ShowcaseRoute = ShowcaseRouteImport.update({
  id: '/_showcase',
  getParentRoute: () => rootRouteImport,
} as any)
const HooksRoute = HooksRouteImport.update({
  id: '/_hooks',
  getParentRoute: () => rootRouteImport,
} as any)
const ShowcaseIndexRoute = ShowcaseIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ShowcaseRoute,
} as any)
const HooksWagmiRoute = HooksWagmiRouteImport.update({
  id: '/wagmi',
  path: '/wagmi',
  getParentRoute: () => HooksRoute,
} as any)
const HooksProviderRoute = HooksProviderRouteImport.update({
  id: '/provider',
  path: '/provider',
  getParentRoute: () => HooksRoute,
} as any)
const ShowcaseShowcaseAuthRoute = ShowcaseShowcaseAuthRouteImport.update({
  id: '/showcase/auth',
  path: '/showcase/auth',
  getParentRoute: () => ShowcaseRoute,
} as any)
const HooksWalletUseWalletsRoute = HooksWalletUseWalletsRouteImport.update({
  id: '/wallet/useWallets',
  path: '/wallet/useWallets',
  getParentRoute: () => HooksRoute,
} as any)
const HooksWalletUseWalletRoute = HooksWalletUseWalletRouteImport.update({
  id: '/wallet/useWallet',
  path: '/wallet/useWallet',
  getParentRoute: () => HooksRoute,
} as any)
const HooksWagmiUseSwitchChainRoute =
  HooksWagmiUseSwitchChainRouteImport.update({
    id: '/useSwitchChain',
    path: '/useSwitchChain',
    getParentRoute: () => HooksWagmiRoute,
  } as any)
const HooksWagmiUseDisconnectRoute = HooksWagmiUseDisconnectRouteImport.update({
  id: '/useDisconnect',
  path: '/useDisconnect',
  getParentRoute: () => HooksWagmiRoute,
} as any)
const HooksWagmiUseBalanceRoute = HooksWagmiUseBalanceRouteImport.update({
  id: '/useBalance',
  path: '/useBalance',
  getParentRoute: () => HooksWagmiRoute,
} as any)
const HooksWagmiUseAccountRoute = HooksWagmiUseAccountRouteImport.update({
  id: '/useAccount',
  path: '/useAccount',
  getParentRoute: () => HooksWagmiRoute,
} as any)
const HooksUtilsUseUIRoute = HooksUtilsUseUIRouteImport.update({
  id: '/utils/useUI',
  path: '/utils/useUI',
  getParentRoute: () => HooksRoute,
} as any)
const HooksUtilsUseStatusRoute = HooksUtilsUseStatusRouteImport.update({
  id: '/utils/useStatus',
  path: '/utils/useStatus',
  getParentRoute: () => HooksRoute,
} as any)
const HooksAuthUseWalletAuthRoute = HooksAuthUseWalletAuthRouteImport.update({
  id: '/auth/useWalletAuth',
  path: '/auth/useWalletAuth',
  getParentRoute: () => HooksRoute,
} as any)
const HooksAuthUseUserRoute = HooksAuthUseUserRouteImport.update({
  id: '/auth/useUser',
  path: '/auth/useUser',
  getParentRoute: () => HooksRoute,
} as any)
const HooksAuthUseSignOutRoute = HooksAuthUseSignOutRouteImport.update({
  id: '/auth/useSignOut',
  path: '/auth/useSignOut',
  getParentRoute: () => HooksRoute,
} as any)
const HooksAuthUseOauthRoute = HooksAuthUseOauthRouteImport.update({
  id: '/auth/useOauth',
  path: '/auth/useOauth',
  getParentRoute: () => HooksRoute,
} as any)
const HooksAuthUseGuestAuthRoute = HooksAuthUseGuestAuthRouteImport.update({
  id: '/auth/useGuestAuth',
  path: '/auth/useGuestAuth',
  getParentRoute: () => HooksRoute,
} as any)
const HooksAuthUseEmailAuthRoute = HooksAuthUseEmailAuthRouteImport.update({
  id: '/auth/useEmailAuth',
  path: '/auth/useEmailAuth',
  getParentRoute: () => HooksRoute,
} as any)
const HooksAuthUseAuthCallbackRoute =
  HooksAuthUseAuthCallbackRouteImport.update({
    id: '/auth/useAuthCallback',
    path: '/auth/useAuthCallback',
    getParentRoute: () => HooksRoute,
  } as any)
const ShowcaseShowcaseAuthIndexRoute =
  ShowcaseShowcaseAuthIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => ShowcaseShowcaseAuthRoute,
  } as any)
const ShowcaseShowcaseAuthSignupRoute =
  ShowcaseShowcaseAuthSignupRouteImport.update({
    id: '/signup',
    path: '/signup',
    getParentRoute: () => ShowcaseShowcaseAuthRoute,
  } as any)
const ShowcaseShowcaseAuthPasswordCallbackRoute =
  ShowcaseShowcaseAuthPasswordCallbackRouteImport.update({
    id: '/password-callback',
    path: '/password-callback',
    getParentRoute: () => ShowcaseShowcaseAuthRoute,
  } as any)
const ShowcaseShowcaseAuthLoginRoute =
  ShowcaseShowcaseAuthLoginRouteImport.update({
    id: '/login',
    path: '/login',
    getParentRoute: () => ShowcaseShowcaseAuthRoute,
  } as any)
const ShowcaseShowcaseAuthForgotPasswordRoute =
  ShowcaseShowcaseAuthForgotPasswordRouteImport.update({
    id: '/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => ShowcaseShowcaseAuthRoute,
  } as any)
const ShowcaseShowcaseAuthConnectWalletRoute =
  ShowcaseShowcaseAuthConnectWalletRouteImport.update({
    id: '/connect-wallet',
    path: '/connect-wallet',
    getParentRoute: () => ShowcaseShowcaseAuthRoute,
  } as any)
const ShowcaseShowcaseAuthCallbackRoute =
  ShowcaseShowcaseAuthCallbackRouteImport.update({
    id: '/callback',
    path: '/callback',
    getParentRoute: () => ShowcaseShowcaseAuthRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/provider': typeof HooksProviderRoute
  '/wagmi': typeof HooksWagmiRouteWithChildren
  '/': typeof ShowcaseIndexRoute
  '/auth/useAuthCallback': typeof HooksAuthUseAuthCallbackRoute
  '/auth/useEmailAuth': typeof HooksAuthUseEmailAuthRoute
  '/auth/useGuestAuth': typeof HooksAuthUseGuestAuthRoute
  '/auth/useOauth': typeof HooksAuthUseOauthRoute
  '/auth/useSignOut': typeof HooksAuthUseSignOutRoute
  '/auth/useUser': typeof HooksAuthUseUserRoute
  '/auth/useWalletAuth': typeof HooksAuthUseWalletAuthRoute
  '/utils/useStatus': typeof HooksUtilsUseStatusRoute
  '/utils/useUI': typeof HooksUtilsUseUIRoute
  '/wagmi/useAccount': typeof HooksWagmiUseAccountRoute
  '/wagmi/useBalance': typeof HooksWagmiUseBalanceRoute
  '/wagmi/useDisconnect': typeof HooksWagmiUseDisconnectRoute
  '/wagmi/useSwitchChain': typeof HooksWagmiUseSwitchChainRoute
  '/wallet/useWallet': typeof HooksWalletUseWalletRoute
  '/wallet/useWallets': typeof HooksWalletUseWalletsRoute
  '/showcase/auth': typeof ShowcaseShowcaseAuthRouteWithChildren
  '/showcase/auth/callback': typeof ShowcaseShowcaseAuthCallbackRoute
  '/showcase/auth/connect-wallet': typeof ShowcaseShowcaseAuthConnectWalletRoute
  '/showcase/auth/forgot-password': typeof ShowcaseShowcaseAuthForgotPasswordRoute
  '/showcase/auth/login': typeof ShowcaseShowcaseAuthLoginRoute
  '/showcase/auth/password-callback': typeof ShowcaseShowcaseAuthPasswordCallbackRoute
  '/showcase/auth/signup': typeof ShowcaseShowcaseAuthSignupRoute
  '/showcase/auth/': typeof ShowcaseShowcaseAuthIndexRoute
}
export interface FileRoutesByTo {
  '/provider': typeof HooksProviderRoute
  '/wagmi': typeof HooksWagmiRouteWithChildren
  '/': typeof ShowcaseIndexRoute
  '/auth/useAuthCallback': typeof HooksAuthUseAuthCallbackRoute
  '/auth/useEmailAuth': typeof HooksAuthUseEmailAuthRoute
  '/auth/useGuestAuth': typeof HooksAuthUseGuestAuthRoute
  '/auth/useOauth': typeof HooksAuthUseOauthRoute
  '/auth/useSignOut': typeof HooksAuthUseSignOutRoute
  '/auth/useUser': typeof HooksAuthUseUserRoute
  '/auth/useWalletAuth': typeof HooksAuthUseWalletAuthRoute
  '/utils/useStatus': typeof HooksUtilsUseStatusRoute
  '/utils/useUI': typeof HooksUtilsUseUIRoute
  '/wagmi/useAccount': typeof HooksWagmiUseAccountRoute
  '/wagmi/useBalance': typeof HooksWagmiUseBalanceRoute
  '/wagmi/useDisconnect': typeof HooksWagmiUseDisconnectRoute
  '/wagmi/useSwitchChain': typeof HooksWagmiUseSwitchChainRoute
  '/wallet/useWallet': typeof HooksWalletUseWalletRoute
  '/wallet/useWallets': typeof HooksWalletUseWalletsRoute
  '/showcase/auth/callback': typeof ShowcaseShowcaseAuthCallbackRoute
  '/showcase/auth/connect-wallet': typeof ShowcaseShowcaseAuthConnectWalletRoute
  '/showcase/auth/forgot-password': typeof ShowcaseShowcaseAuthForgotPasswordRoute
  '/showcase/auth/login': typeof ShowcaseShowcaseAuthLoginRoute
  '/showcase/auth/password-callback': typeof ShowcaseShowcaseAuthPasswordCallbackRoute
  '/showcase/auth/signup': typeof ShowcaseShowcaseAuthSignupRoute
  '/showcase/auth': typeof ShowcaseShowcaseAuthIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_hooks': typeof HooksRouteWithChildren
  '/_showcase': typeof ShowcaseRouteWithChildren
  '/_hooks/provider': typeof HooksProviderRoute
  '/_hooks/wagmi': typeof HooksWagmiRouteWithChildren
  '/_showcase/': typeof ShowcaseIndexRoute
  '/_hooks/auth/useAuthCallback': typeof HooksAuthUseAuthCallbackRoute
  '/_hooks/auth/useEmailAuth': typeof HooksAuthUseEmailAuthRoute
  '/_hooks/auth/useGuestAuth': typeof HooksAuthUseGuestAuthRoute
  '/_hooks/auth/useOauth': typeof HooksAuthUseOauthRoute
  '/_hooks/auth/useSignOut': typeof HooksAuthUseSignOutRoute
  '/_hooks/auth/useUser': typeof HooksAuthUseUserRoute
  '/_hooks/auth/useWalletAuth': typeof HooksAuthUseWalletAuthRoute
  '/_hooks/utils/useStatus': typeof HooksUtilsUseStatusRoute
  '/_hooks/utils/useUI': typeof HooksUtilsUseUIRoute
  '/_hooks/wagmi/useAccount': typeof HooksWagmiUseAccountRoute
  '/_hooks/wagmi/useBalance': typeof HooksWagmiUseBalanceRoute
  '/_hooks/wagmi/useDisconnect': typeof HooksWagmiUseDisconnectRoute
  '/_hooks/wagmi/useSwitchChain': typeof HooksWagmiUseSwitchChainRoute
  '/_hooks/wallet/useWallet': typeof HooksWalletUseWalletRoute
  '/_hooks/wallet/useWallets': typeof HooksWalletUseWalletsRoute
  '/_showcase/showcase/auth': typeof ShowcaseShowcaseAuthRouteWithChildren
  '/_showcase/showcase/auth/callback': typeof ShowcaseShowcaseAuthCallbackRoute
  '/_showcase/showcase/auth/connect-wallet': typeof ShowcaseShowcaseAuthConnectWalletRoute
  '/_showcase/showcase/auth/forgot-password': typeof ShowcaseShowcaseAuthForgotPasswordRoute
  '/_showcase/showcase/auth/login': typeof ShowcaseShowcaseAuthLoginRoute
  '/_showcase/showcase/auth/password-callback': typeof ShowcaseShowcaseAuthPasswordCallbackRoute
  '/_showcase/showcase/auth/signup': typeof ShowcaseShowcaseAuthSignupRoute
  '/_showcase/showcase/auth/': typeof ShowcaseShowcaseAuthIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/provider'
    | '/wagmi'
    | '/'
    | '/auth/useAuthCallback'
    | '/auth/useEmailAuth'
    | '/auth/useGuestAuth'
    | '/auth/useOauth'
    | '/auth/useSignOut'
    | '/auth/useUser'
    | '/auth/useWalletAuth'
    | '/utils/useStatus'
    | '/utils/useUI'
    | '/wagmi/useAccount'
    | '/wagmi/useBalance'
    | '/wagmi/useDisconnect'
    | '/wagmi/useSwitchChain'
    | '/wallet/useWallet'
    | '/wallet/useWallets'
    | '/showcase/auth'
    | '/showcase/auth/callback'
    | '/showcase/auth/connect-wallet'
    | '/showcase/auth/forgot-password'
    | '/showcase/auth/login'
    | '/showcase/auth/password-callback'
    | '/showcase/auth/signup'
    | '/showcase/auth/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/provider'
    | '/wagmi'
    | '/'
    | '/auth/useAuthCallback'
    | '/auth/useEmailAuth'
    | '/auth/useGuestAuth'
    | '/auth/useOauth'
    | '/auth/useSignOut'
    | '/auth/useUser'
    | '/auth/useWalletAuth'
    | '/utils/useStatus'
    | '/utils/useUI'
    | '/wagmi/useAccount'
    | '/wagmi/useBalance'
    | '/wagmi/useDisconnect'
    | '/wagmi/useSwitchChain'
    | '/wallet/useWallet'
    | '/wallet/useWallets'
    | '/showcase/auth/callback'
    | '/showcase/auth/connect-wallet'
    | '/showcase/auth/forgot-password'
    | '/showcase/auth/login'
    | '/showcase/auth/password-callback'
    | '/showcase/auth/signup'
    | '/showcase/auth'
  id:
    | '__root__'
    | '/_hooks'
    | '/_showcase'
    | '/_hooks/provider'
    | '/_hooks/wagmi'
    | '/_showcase/'
    | '/_hooks/auth/useAuthCallback'
    | '/_hooks/auth/useEmailAuth'
    | '/_hooks/auth/useGuestAuth'
    | '/_hooks/auth/useOauth'
    | '/_hooks/auth/useSignOut'
    | '/_hooks/auth/useUser'
    | '/_hooks/auth/useWalletAuth'
    | '/_hooks/utils/useStatus'
    | '/_hooks/utils/useUI'
    | '/_hooks/wagmi/useAccount'
    | '/_hooks/wagmi/useBalance'
    | '/_hooks/wagmi/useDisconnect'
    | '/_hooks/wagmi/useSwitchChain'
    | '/_hooks/wallet/useWallet'
    | '/_hooks/wallet/useWallets'
    | '/_showcase/showcase/auth'
    | '/_showcase/showcase/auth/callback'
    | '/_showcase/showcase/auth/connect-wallet'
    | '/_showcase/showcase/auth/forgot-password'
    | '/_showcase/showcase/auth/login'
    | '/_showcase/showcase/auth/password-callback'
    | '/_showcase/showcase/auth/signup'
    | '/_showcase/showcase/auth/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  HooksRoute: typeof HooksRouteWithChildren
  ShowcaseRoute: typeof ShowcaseRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_showcase': {
      id: '/_showcase'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ShowcaseRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_hooks': {
      id: '/_hooks'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof HooksRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_showcase/': {
      id: '/_showcase/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ShowcaseIndexRouteImport
      parentRoute: typeof ShowcaseRoute
    }
    '/_hooks/wagmi': {
      id: '/_hooks/wagmi'
      path: '/wagmi'
      fullPath: '/wagmi'
      preLoaderRoute: typeof HooksWagmiRouteImport
      parentRoute: typeof HooksRoute
    }
    '/_hooks/provider': {
      id: '/_hooks/provider'
      path: '/provider'
      fullPath: '/provider'
      preLoaderRoute: typeof HooksProviderRouteImport
      parentRoute: typeof HooksRoute
    }
    '/_showcase/showcase/auth': {
      id: '/_showcase/showcase/auth'
      path: '/showcase/auth'
      fullPath: '/showcase/auth'
      preLoaderRoute: typeof ShowcaseShowcaseAuthRouteImport
      parentRoute: typeof ShowcaseRoute
    }
    '/_hooks/wallet/useWallets': {
      id: '/_hooks/wallet/useWallets'
      path: '/wallet/useWallets'
      fullPath: '/wallet/useWallets'
      preLoaderRoute: typeof HooksWalletUseWalletsRouteImport
      parentRoute: typeof HooksRoute
    }
    '/_hooks/wallet/useWallet': {
      id: '/_hooks/wallet/useWallet'
      path: '/wallet/useWallet'
      fullPath: '/wallet/useWallet'
      preLoaderRoute: typeof HooksWalletUseWalletRouteImport
      parentRoute: typeof HooksRoute
    }
    '/_hooks/wagmi/useSwitchChain': {
      id: '/_hooks/wagmi/useSwitchChain'
      path: '/useSwitchChain'
      fullPath: '/wagmi/useSwitchChain'
      preLoaderRoute: typeof HooksWagmiUseSwitchChainRouteImport
      parentRoute: typeof HooksWagmiRoute
    }
    '/_hooks/wagmi/useDisconnect': {
      id: '/_hooks/wagmi/useDisconnect'
      path: '/useDisconnect'
      fullPath: '/wagmi/useDisconnect'
      preLoaderRoute: typeof HooksWagmiUseDisconnectRouteImport
      parentRoute: typeof HooksWagmiRoute
    }
    '/_hooks/wagmi/useBalance': {
      id: '/_hooks/wagmi/useBalance'
      path: '/useBalance'
      fullPath: '/wagmi/useBalance'
      preLoaderRoute: typeof HooksWagmiUseBalanceRouteImport
      parentRoute: typeof HooksWagmiRoute
    }
    '/_hooks/wagmi/useAccount': {
      id: '/_hooks/wagmi/useAccount'
      path: '/useAccount'
      fullPath: '/wagmi/useAccount'
      preLoaderRoute: typeof HooksWagmiUseAccountRouteImport
      parentRoute: typeof HooksWagmiRoute
    }
    '/_hooks/utils/useUI': {
      id: '/_hooks/utils/useUI'
      path: '/utils/useUI'
      fullPath: '/utils/useUI'
      preLoaderRoute: typeof HooksUtilsUseUIRouteImport
      parentRoute: typeof HooksRoute
    }
    '/_hooks/utils/useStatus': {
      id: '/_hooks/utils/useStatus'
      path: '/utils/useStatus'
      fullPath: '/utils/useStatus'
      preLoaderRoute: typeof HooksUtilsUseStatusRouteImport
      parentRoute: typeof HooksRoute
    }
    '/_hooks/auth/useWalletAuth': {
      id: '/_hooks/auth/useWalletAuth'
      path: '/auth/useWalletAuth'
      fullPath: '/auth/useWalletAuth'
      preLoaderRoute: typeof HooksAuthUseWalletAuthRouteImport
      parentRoute: typeof HooksRoute
    }
    '/_hooks/auth/useUser': {
      id: '/_hooks/auth/useUser'
      path: '/auth/useUser'
      fullPath: '/auth/useUser'
      preLoaderRoute: typeof HooksAuthUseUserRouteImport
      parentRoute: typeof HooksRoute
    }
    '/_hooks/auth/useSignOut': {
      id: '/_hooks/auth/useSignOut'
      path: '/auth/useSignOut'
      fullPath: '/auth/useSignOut'
      preLoaderRoute: typeof HooksAuthUseSignOutRouteImport
      parentRoute: typeof HooksRoute
    }
    '/_hooks/auth/useOauth': {
      id: '/_hooks/auth/useOauth'
      path: '/auth/useOauth'
      fullPath: '/auth/useOauth'
      preLoaderRoute: typeof HooksAuthUseOauthRouteImport
      parentRoute: typeof HooksRoute
    }
    '/_hooks/auth/useGuestAuth': {
      id: '/_hooks/auth/useGuestAuth'
      path: '/auth/useGuestAuth'
      fullPath: '/auth/useGuestAuth'
      preLoaderRoute: typeof HooksAuthUseGuestAuthRouteImport
      parentRoute: typeof HooksRoute
    }
    '/_hooks/auth/useEmailAuth': {
      id: '/_hooks/auth/useEmailAuth'
      path: '/auth/useEmailAuth'
      fullPath: '/auth/useEmailAuth'
      preLoaderRoute: typeof HooksAuthUseEmailAuthRouteImport
      parentRoute: typeof HooksRoute
    }
    '/_hooks/auth/useAuthCallback': {
      id: '/_hooks/auth/useAuthCallback'
      path: '/auth/useAuthCallback'
      fullPath: '/auth/useAuthCallback'
      preLoaderRoute: typeof HooksAuthUseAuthCallbackRouteImport
      parentRoute: typeof HooksRoute
    }
    '/_showcase/showcase/auth/': {
      id: '/_showcase/showcase/auth/'
      path: '/'
      fullPath: '/showcase/auth/'
      preLoaderRoute: typeof ShowcaseShowcaseAuthIndexRouteImport
      parentRoute: typeof ShowcaseShowcaseAuthRoute
    }
    '/_showcase/showcase/auth/signup': {
      id: '/_showcase/showcase/auth/signup'
      path: '/signup'
      fullPath: '/showcase/auth/signup'
      preLoaderRoute: typeof ShowcaseShowcaseAuthSignupRouteImport
      parentRoute: typeof ShowcaseShowcaseAuthRoute
    }
    '/_showcase/showcase/auth/password-callback': {
      id: '/_showcase/showcase/auth/password-callback'
      path: '/password-callback'
      fullPath: '/showcase/auth/password-callback'
      preLoaderRoute: typeof ShowcaseShowcaseAuthPasswordCallbackRouteImport
      parentRoute: typeof ShowcaseShowcaseAuthRoute
    }
    '/_showcase/showcase/auth/login': {
      id: '/_showcase/showcase/auth/login'
      path: '/login'
      fullPath: '/showcase/auth/login'
      preLoaderRoute: typeof ShowcaseShowcaseAuthLoginRouteImport
      parentRoute: typeof ShowcaseShowcaseAuthRoute
    }
    '/_showcase/showcase/auth/forgot-password': {
      id: '/_showcase/showcase/auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/showcase/auth/forgot-password'
      preLoaderRoute: typeof ShowcaseShowcaseAuthForgotPasswordRouteImport
      parentRoute: typeof ShowcaseShowcaseAuthRoute
    }
    '/_showcase/showcase/auth/connect-wallet': {
      id: '/_showcase/showcase/auth/connect-wallet'
      path: '/connect-wallet'
      fullPath: '/showcase/auth/connect-wallet'
      preLoaderRoute: typeof ShowcaseShowcaseAuthConnectWalletRouteImport
      parentRoute: typeof ShowcaseShowcaseAuthRoute
    }
    '/_showcase/showcase/auth/callback': {
      id: '/_showcase/showcase/auth/callback'
      path: '/callback'
      fullPath: '/showcase/auth/callback'
      preLoaderRoute: typeof ShowcaseShowcaseAuthCallbackRouteImport
      parentRoute: typeof ShowcaseShowcaseAuthRoute
    }
  }
}

interface HooksWagmiRouteChildren {
  HooksWagmiUseAccountRoute: typeof HooksWagmiUseAccountRoute
  HooksWagmiUseBalanceRoute: typeof HooksWagmiUseBalanceRoute
  HooksWagmiUseDisconnectRoute: typeof HooksWagmiUseDisconnectRoute
  HooksWagmiUseSwitchChainRoute: typeof HooksWagmiUseSwitchChainRoute
}

const HooksWagmiRouteChildren: HooksWagmiRouteChildren = {
  HooksWagmiUseAccountRoute: HooksWagmiUseAccountRoute,
  HooksWagmiUseBalanceRoute: HooksWagmiUseBalanceRoute,
  HooksWagmiUseDisconnectRoute: HooksWagmiUseDisconnectRoute,
  HooksWagmiUseSwitchChainRoute: HooksWagmiUseSwitchChainRoute,
}

const HooksWagmiRouteWithChildren = HooksWagmiRoute._addFileChildren(
  HooksWagmiRouteChildren,
)

interface HooksRouteChildren {
  HooksProviderRoute: typeof HooksProviderRoute
  HooksWagmiRoute: typeof HooksWagmiRouteWithChildren
  HooksAuthUseAuthCallbackRoute: typeof HooksAuthUseAuthCallbackRoute
  HooksAuthUseEmailAuthRoute: typeof HooksAuthUseEmailAuthRoute
  HooksAuthUseGuestAuthRoute: typeof HooksAuthUseGuestAuthRoute
  HooksAuthUseOauthRoute: typeof HooksAuthUseOauthRoute
  HooksAuthUseSignOutRoute: typeof HooksAuthUseSignOutRoute
  HooksAuthUseUserRoute: typeof HooksAuthUseUserRoute
  HooksAuthUseWalletAuthRoute: typeof HooksAuthUseWalletAuthRoute
  HooksUtilsUseStatusRoute: typeof HooksUtilsUseStatusRoute
  HooksUtilsUseUIRoute: typeof HooksUtilsUseUIRoute
  HooksWalletUseWalletRoute: typeof HooksWalletUseWalletRoute
  HooksWalletUseWalletsRoute: typeof HooksWalletUseWalletsRoute
}

const HooksRouteChildren: HooksRouteChildren = {
  HooksProviderRoute: HooksProviderRoute,
  HooksWagmiRoute: HooksWagmiRouteWithChildren,
  HooksAuthUseAuthCallbackRoute: HooksAuthUseAuthCallbackRoute,
  HooksAuthUseEmailAuthRoute: HooksAuthUseEmailAuthRoute,
  HooksAuthUseGuestAuthRoute: HooksAuthUseGuestAuthRoute,
  HooksAuthUseOauthRoute: HooksAuthUseOauthRoute,
  HooksAuthUseSignOutRoute: HooksAuthUseSignOutRoute,
  HooksAuthUseUserRoute: HooksAuthUseUserRoute,
  HooksAuthUseWalletAuthRoute: HooksAuthUseWalletAuthRoute,
  HooksUtilsUseStatusRoute: HooksUtilsUseStatusRoute,
  HooksUtilsUseUIRoute: HooksUtilsUseUIRoute,
  HooksWalletUseWalletRoute: HooksWalletUseWalletRoute,
  HooksWalletUseWalletsRoute: HooksWalletUseWalletsRoute,
}

const HooksRouteWithChildren = HooksRoute._addFileChildren(HooksRouteChildren)

interface ShowcaseShowcaseAuthRouteChildren {
  ShowcaseShowcaseAuthCallbackRoute: typeof ShowcaseShowcaseAuthCallbackRoute
  ShowcaseShowcaseAuthConnectWalletRoute: typeof ShowcaseShowcaseAuthConnectWalletRoute
  ShowcaseShowcaseAuthForgotPasswordRoute: typeof ShowcaseShowcaseAuthForgotPasswordRoute
  ShowcaseShowcaseAuthLoginRoute: typeof ShowcaseShowcaseAuthLoginRoute
  ShowcaseShowcaseAuthPasswordCallbackRoute: typeof ShowcaseShowcaseAuthPasswordCallbackRoute
  ShowcaseShowcaseAuthSignupRoute: typeof ShowcaseShowcaseAuthSignupRoute
  ShowcaseShowcaseAuthIndexRoute: typeof ShowcaseShowcaseAuthIndexRoute
}

const ShowcaseShowcaseAuthRouteChildren: ShowcaseShowcaseAuthRouteChildren = {
  ShowcaseShowcaseAuthCallbackRoute: ShowcaseShowcaseAuthCallbackRoute,
  ShowcaseShowcaseAuthConnectWalletRoute:
    ShowcaseShowcaseAuthConnectWalletRoute,
  ShowcaseShowcaseAuthForgotPasswordRoute:
    ShowcaseShowcaseAuthForgotPasswordRoute,
  ShowcaseShowcaseAuthLoginRoute: ShowcaseShowcaseAuthLoginRoute,
  ShowcaseShowcaseAuthPasswordCallbackRoute:
    ShowcaseShowcaseAuthPasswordCallbackRoute,
  ShowcaseShowcaseAuthSignupRoute: ShowcaseShowcaseAuthSignupRoute,
  ShowcaseShowcaseAuthIndexRoute: ShowcaseShowcaseAuthIndexRoute,
}

const ShowcaseShowcaseAuthRouteWithChildren =
  ShowcaseShowcaseAuthRoute._addFileChildren(ShowcaseShowcaseAuthRouteChildren)

interface ShowcaseRouteChildren {
  ShowcaseIndexRoute: typeof ShowcaseIndexRoute
  ShowcaseShowcaseAuthRoute: typeof ShowcaseShowcaseAuthRouteWithChildren
}

const ShowcaseRouteChildren: ShowcaseRouteChildren = {
  ShowcaseIndexRoute: ShowcaseIndexRoute,
  ShowcaseShowcaseAuthRoute: ShowcaseShowcaseAuthRouteWithChildren,
}

const ShowcaseRouteWithChildren = ShowcaseRoute._addFileChildren(
  ShowcaseRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  HooksRoute: HooksRouteWithChildren,
  ShowcaseRoute: ShowcaseRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
